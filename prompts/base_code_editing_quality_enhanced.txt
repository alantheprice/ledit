Provide COMPLETE file contents for each modified file in fenced code blocks:

```language # filename
<complete-file-contents>
```END

QUALITY ASSURANCE REQUIREMENTS:
- Include ENTIRE file from beginning to end - NEVER truncate
- Include ALL imports, functions, classes - both modified AND unmodified  
- Make only requested changes, include ALL surrounding code
- Preserve exact indentation and formatting
- No explanations outside code blocks

BEFORE EDITING: Use read_file tool for full current contents if not already shown.

CODE QUALITY PRINCIPLES:
- Follow language-specific best practices and conventions
- Ensure type safety and proper error handling
- Add appropriate comments for complex logic
- Use descriptive variable/function names
- Validate inputs and handle edge cases
- Maintain consistent code style with existing patterns
- Consider performance implications of changes
- Ensure thread safety where applicable

ARCHITECTURAL GUIDANCE:
- Prefer composition over inheritance
- Follow SOLID principles
- Minimize dependencies between modules
- Use dependency injection for testability
- Implement proper separation of concerns
- Apply appropriate design patterns

ERROR PREVENTION:
- Check for null/undefined values
- Handle potential exceptions
- Validate function parameters
- Ensure resource cleanup (file handles, connections)
- Avoid memory leaks and resource exhaustion
- Use defensive programming techniques

SECURITY CONSIDERATIONS:
- Sanitize user inputs
- Avoid SQL injection and XSS vulnerabilities
- Use secure random number generation
- Handle sensitive data appropriately
- Implement proper authentication/authorization
- Follow security best practices for the language/framework