package workspace

// WorkspaceFile represents the overall structure of the workspace.json file.
type WorkspaceFile struct {
	Files        map[string]WorkspaceFileInfo `json:"files"`
	ProjectGoals ProjectGoals                 `json:"project_goals"`
	BuildCommand string                       `json:"build_command,omitempty"` // New field for autogenerated build command
}

// WorkspaceFileInfo stores information about a single file in the workspace.
type WorkspaceFileInfo struct {
	Hash                    string   `json:"hash"`
	Summary                 string   `json:"summary"`
	Exports                 string   `json:"exports"`
	References              string   `json:"references"`
	TokenCount              int      `json:"token_count"`
	SecurityConcerns        []string `json:"security_concerns"`
	IgnoredSecurityConcerns []string `json:"ignored_security_concerns"`
}

// ProjectGoals defines the high-level objectives and vision for the project.
type ProjectGoals struct {
	OverallGoal     string `json:"overall_goal"`
	KeyFeatures     string `json:"key_features"`
	TargetAudience  string `json:"target_audience"`
	TechnicalVision string `json:"technical_vision"`
}

// OrchestrationPlan represents the high-level plan for a complex task.
type OrchestrationPlan struct {
	Requirements []Requirement `json:"requirements"`
}

// Requirement represents a single step in the orchestration plan.
type Requirement struct {
	Instruction string `json:"instruction"`
	IsCompleted bool   `json:"is_completed"`
}

// FileChange represents a specific change to be made to a file.
type FileChange struct {
	Filepath    string `json:"filepath"`
	Instruction string `json:"instruction"`
}

// FileChanges represents a collection of file changes for a requirement.
type FileChanges struct {
	Changes []FileChange `json:"changes"`
}